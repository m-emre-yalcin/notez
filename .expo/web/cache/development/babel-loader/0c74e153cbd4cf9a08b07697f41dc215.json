{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { TransitionPresets } from '@react-navigation/stack';\nimport Home from \"./src/screens/home\";\nimport About from \"./src/screens/about\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      animated: true,\n      backgroundColor: \"orangered\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route,\n              navigation = _ref.navigation;\n          return _objectSpread({}, TransitionPresets.ModalPresentationIOS);\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: _objectSpread({\n            title: 'Anasayfa'\n          }, style.header)\n        }), _jsx(Stack.Screen, {\n          name: \"About\",\n          component: About,\n          options: {\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                onPress: function onPress() {\n                  return alert('This is a button!');\n                },\n                title: \"Info\",\n                color: \"orangered\"\n              });\n            }\n          }\n        })]\n      })\n    })]\n  });\n}\n\nvar style = StyleSheet.create({\n  header: {\n    headerStyle: {\n      color: '#fff',\n      backgroundColor: 'orangered'\n    },\n    headerTintColor: 'red',\n    headerTitleStyle: {\n      fontWeight: 'bold'\n    }\n  }\n});\nexport default App;","map":{"version":3,"sources":["S:/Projects (my)/notez/App.tsx"],"names":["React","NavigationContainer","createNativeStackNavigator","TransitionPresets","Home","About","Stack","App","route","navigation","ModalPresentationIOS","title","style","header","headerRight","alert","StyleSheet","create","headerStyle","color","backgroundColor","headerTintColor","headerTitleStyle","fontWeight"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,SAAQC,iBAAR,QAAgC,yBAAhC;AAEA,OAAOC,IAAP;AACA,OAAOC,KAAP;;;;AAEA,IAAMC,KAAK,GAAGJ,0BAA0B,EAAxC;;AAWA,SAASK,GAAT,GAAe;AACb,SACE;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,IAArB;AAA2B,MAAA,eAAe,EAAC;AAA3C,MADF,EAEE,KAAC,mBAAD;AAAA,gBACE,MAAC,KAAD,CAAO,SAAP;AACE,QAAA,aAAa,EAAE;AAAA,cAAEC,KAAF,QAAEA,KAAF;AAAA,cAASC,UAAT,QAASA,UAAT;AAAA,mCAEVN,iBAAiB,CAACO,oBAFR;AAAA,SADjB;AAAA,mBAKE,KAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAEN,IAFb;AAGE,UAAA,OAAO;AACLO,YAAAA,KAAK,EAAE;AADF,aAEFC,KAAK,CAACC,MAFJ;AAHT,UALF,EAaE,KAAC,KAAD,CAAO,MAAP;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,SAAS,EAAER,KAFb;AAGE,UAAA,OAAO,EAAE;AAEPS,YAAAA,WAAW,EAAE;AAAA,qBACX,KAAC,MAAD;AACE,gBAAA,OAAO,EAAE;AAAA,yBAAMC,KAAK,CAAC,mBAAD,CAAX;AAAA,iBADX;AAEE,gBAAA,KAAK,EAAC,MAFR;AAGE,gBAAA,KAAK,EAAC;AAHR,gBADW;AAAA;AAFN;AAHX,UAbF;AAAA;AADF,MAFF;AAAA,IADF;AAmCD;;AAED,IAAMH,KAAK,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC9BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,WAAW,EAAE;AACXC,MAAAA,KAAK,EAAE,MADI;AAEXC,MAAAA,eAAe,EAAE;AAFN,KADP;AAKNC,IAAAA,eAAe,EAAE,KALX;AAMNC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,UAAU,EAAE;AADI;AANZ;AADsB,CAAlB,CAAd;AAaA,eAAehB,GAAf","sourcesContent":["import * as React from 'react';\nimport {StatusBar, StyleSheet, Image, Button, View, Text} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport {TransitionPresets} from '@react-navigation/stack';\n\nimport Home from './src/screens/home';\nimport About from './src/screens/about';\n\nconst Stack = createNativeStackNavigator();\n\n// function LogoTitle() {\n//   return (\n//     <View style={{width: 50, height: 50, justifyContent: 'center'}}>\n//       <Image source=\"https://www.tailorbrands.com/wp-content/uploads/2020/07/mcdonalds-logo.jpg\" />\n//       <Text>About</Text>\n//     </View>\n//   );\n// }\n\nfunction App() {\n  return (\n    <>\n      <StatusBar animated={true} backgroundColor=\"orangered\" />\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={({route, navigation}) => ({\n            // gestureEnabled: true,\n            ...TransitionPresets.ModalPresentationIOS,\n          })}>\n          <Stack.Screen\n            name=\"Home\"\n            component={Home}\n            options={{\n              title: 'Anasayfa',\n              ...style.header,\n            }}\n          />\n          <Stack.Screen\n            name=\"About\"\n            component={About}\n            options={{\n              // headerTitle: () => <LogoTitle />,\n              headerRight: () => (\n                <Button\n                  onPress={() => alert('This is a button!')}\n                  title=\"Info\"\n                  color=\"orangered\"\n                />\n              ),\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}\n\nconst style = StyleSheet.create({\n  header: {\n    headerStyle: {\n      color: '#fff',\n      backgroundColor: 'orangered',\n    },\n    headerTintColor: 'red',\n    headerTitleStyle: {\n      fontWeight: 'bold',\n    },\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}